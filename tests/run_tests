#!/bin/bash -e

#========================================================
# Configure build environment
#========================================================
if [[ "$OSTYPE" == "linux-gnu" ]];          then PLATFORM=linux
elif [[ "$OSTYPE" == "darwin"* ]];          then PLATFORM=mac
elif [[ "$OSTYPE" == "msys" ]];             then PLATFORM=windows
elif [[ "$OSTYPE" == "linux-gnueabihf" ]];  then PLATFORM=pi
fi

echo PLATFORM: "$PLATFORM"

if [ -z "$PLATFORM" ]; then
    echo ERROR: Unknown platform
    exit 1
fi

ROOT=$(cd "$(dirname "$0")/.."; pwd)
echo ROOT: "$ROOT"


#==========================================================
# Build examples and run tests
#==========================================================
function runTestApp()
{
    APP_NAME="$1"

    if [ "$PLATFORM" == "mac" ]; then
        "$ROOT/tests/mac/build_examples"

        APP_ROOT=$ROOT/examples/projects/$APP_NAME/Builds/MacOSX
        APP_EXE=$APP_ROOT/build/Release/$APP_NAME
        cd "$APP_ROOT"

        xcodebuild -configuration Release LLVM_LTO=NO GCC_TREAT_WARNINGS_AS_ERRORS=YES
        "$APP_EXE" --junit-xml-file "$ROOT/bin/test_results/TEST-$APP_NAME.xml"
        
        xcodebuild -configuration Release -enableAddressSanitizer YES LLVM_LTO=NO GCC_TREAT_WARNINGS_AS_ERRORS=YES
        "$APP_EXE" --junit-xml-file "$ROOT/bin/test_results/TEST-$APP_NAME_asan.xml"

        xcodebuild -configuration Release -enableThreadSanitizer YES LLVM_LTO=NO GCC_TREAT_WARNINGS_AS_ERRORS=YES
        "$APP_EXE" --junit-xml-file "$ROOT/bin/test_results/TEST-$APP_NAME_tsan.xml"

        xcodebuild analyze -quiet -configuration Release LLVM_LTO=NO
    fi

    # ==========================================================
    if [ "$PLATFORM" == "windows" ]; then
        if [ -z "$MSBUILD_EXE" ]; then
            export MSBUILD_EXE="C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin\MSBuild.exe"
        fi

        "$ROOT/tests/windows/build_examples.bat"

        APP_ROOT=$ROOT/examples/projects/$APP_NAME/Builds/VisualStudio2017
        APP_EXE=$APP_ROOT/x64/Release/ConsoleApp/$APP_NAME.exe
        cd "$APP_ROOT"

        "$MSBUILD_EXE" TestRunner.sln -p:VisualStudioVersion=15.0 -m -p:Configuration=Release -p:Platform=x64 -p:PreferredToolArchitecture=x64

        "$APP_EXE" --junit-xml-file "$ROOT/bin/test_results/TEST-$APP_NAME.xml"
    fi

    # ==========================================================
    if [ "$PLATFORM" == "linux" ]; then
        "$ROOT/tests/linux/build_examples"

        APP_ROOT=$ROOT/examples/projects/$APP_NAME/Builds/LinuxMakefile
        APP_EXE=$APP_ROOT/build/$APP_NAME
        cd "$APP_ROOT"

        make clean
        make CONFIG=Release -j$(nproc)

        "$APP_EXE" --junit-xml-file "$ROOT/bin/test_results/TEST-$APP_NAME.xml"
        
        if [ -z "$DISABLE_VALGRIND" ]; then
            valgrind "$APP_EXE" --junit-xml-file "$ROOT/bin/test_results/TEST-$APP_NAME_valgrind.xml"
        fi
    fi
}

#==========================================================
# Run the apps
#==========================================================
runTestApp "TestRunner"
runTestApp "AudioNodeDev"